# -*- coding: utf-8 -*-
"""Common used by Macors in Doji's Series.

Created on Wed Aug 10 09:17:48 2022

@author: WaNiNi
"""

import numpy as np

from func._td import NumericTimeSeries, TimeUnit

from .._common import Candlestick, LeadingTrend, MacroInfo

LeadingTrends = LeadingTrend.type
_ENG_NAME = 'Doji'
_CHT_NAME = '十字線'

description = (f"[{_CHT_NAME}({_ENG_NAME})]\n"
               "判定規則：\n"
               "1. 市場處於指定趨勢(詳見參數`近期趨勢`)；\n"
               "2. 實體線長度為零或接近於零。\n"
               "現象說明：\n"
               f"基本上，{_CHT_NAME}的發生，表示在該段時間內，市場呈現多空拉鋸的僵局；"
               f"在下降段出現{_CHT_NAME}，表示賣盤壓力可能正在減弱，有可能出現反轉；"
               f"在上升段出現{_CHT_NAME}，表示買盤壓力可能正在減弱，有可能出現反轉。"
               f"但，單獨的{_CHT_NAME}往往不能確定走勢是否會發生反轉，一般來說，"
               "還需要更多的訊號才能做進一步的確認。")

array = np.array

_DEFAULT_SAMPLES = {}
_DEFAULT_SAMPLES[LeadingTrends.NONE] = {
    TimeUnit.DAY:
        np.array([[100., 102., 98., 100.]]).T,
    TimeUnit.WEEK:
        np.array([[100., 105., 95., 100.]]).T,
    TimeUnit.MONTH:
        np.array([[100., 110., 90., 100.]]).T}

_DEFAULT_SAMPLES[LeadingTrends.BULLISH] = {
    TimeUnit.DAY:
        array([[ 96.59680249,  97.36712993,  95.07854336,  95.07854336],
               [ 95.56891239,  96.08284647,  92.91364088,  93.11928958],
               [ 93.62250584,  93.91649478,  91.65313139,  93.52449884],
               [ 91.62622019,  93.23944117,  91.62224286,  93.03781198],
               [ 93.75759959,  97.22707114,  93.57712441,  97.18303775],
               [100.08137853, 101.3219979 ,  99.10405417, 100.69469416],
               [101.0949989 , 103.73672002, 100.9467206 , 103.1721188 ],
               [102.78614315, 105.6567318 , 102.59957955, 103.4496747 ],
               [104.48977223, 107.73937831, 103.8695856 , 107.38536895],
               [106.86197284, 108.47467189, 105.85490218, 107.8467497 ],
               [109.40464819, 110.51513893, 107.68251383, 109.43759667]]).T,
    TimeUnit.WEEK:
        array([[ 88.89149823,  94.14042939,  88.89149823,  93.65375524],
               [ 94.34470325,  97.10332494,  92.53896716,  95.82581861],
               [ 97.86244248, 104.62054074,  97.53175777, 101.19092806],
               [100.23191707, 103.28760667,  95.79220207, 102.2109229 ],
               [103.72717074, 107.83860948, 102.98839205, 107.83860948],
               [107.08739405, 109.95719088, 105.36848844, 107.07583209]]).T,
    TimeUnit.MONTH:
        array([[ 78.31195083,  90.31719617,  78.26266793,  87.73332667],
               [ 88.57080097, 103.98407893,  87.24103042, 100.96000505],
               [103.1539607 , 118.49715531,  99.10974004, 110.79646607],
               [113.89710322, 118.68656108, 106.50025715, 113.97769944]]).T}

_DEFAULT_SAMPLES[LeadingTrends.BEARISH] = {
    TimeUnit.DAY:
        array([[107.43607949, 107.57060352, 105.52672367, 107.00282211],
               [106.96724228, 106.96724228, 104.36011984, 105.49342952],
               [105.19675028, 106.02314938, 103.65155741, 105.97168061],
               [105.8859552 , 106.47459048, 102.29687058, 102.42254169],
               [101.60497759, 103.84300585, 101.16735752, 101.7896093 ],
               [102.56297409, 102.56297409,  99.47404358, 101.38861042],
               [102.11104782, 102.15981963,  99.60972624, 100.17927006],
               [ 99.47054917,  99.60763733,  97.58919839,  97.95266875],
               [ 96.07562085,  96.20481142,  92.21565997,  92.21565997],
               [ 90.94935621,  91.55943837,  89.83261596,  90.30421913],
               [ 89.38995462,  90.63476756,  88.78855381,  89.50851398]]).T,
    TimeUnit.WEEK:
        array([[117.02272843, 117.02272843, 110.13610794, 113.51532331],
               [109.62624742, 111.57041992, 104.51516533, 105.47369689],
               [102.37197184, 103.6809365 ,  99.76163059,  99.76163059],
               [ 97.72363113,  98.80638819,  92.5625924 ,  94.50240621],
               [ 93.57017449,  95.37911086,  87.65713605,  89.18655945],
               [ 88.83300404,  92.54863746,  85.61639375,  89.15537878]]).T,
    TimeUnit.MONTH:
        array([[119.60909806, 119.60909806, 105.44300349, 108.94908092],
               [110.30866793, 113.99911885,  97.71984567, 101.76234588],
               [103.50780231, 105.5474006 ,  85.18507851,  85.91745046],
               [ 85.79156201,  88.32841153,  82.29673003,  86.02530567]]).T}

_DEFAULT_SAMPLES[LeadingTrends.STRICTLY_BULLISH] = {
    TimeUnit.DAY:
        array([[ 90.5100704 ,  92.02587321,  89.12490727,  89.21549101],
               [ 90.75418753,  93.3376362 ,  90.08167911,  93.26803173],
               [ 93.29236864,  96.54535592,  92.92152583,  96.54535592],
               [ 94.93717016,  95.79811256,  94.50150279,  95.23173233],
               [ 93.60289218,  95.71801474,  93.13649627,  95.09243009],
               [ 98.03369499, 100.88485196,  97.44873679, 100.36543004],
               [103.61675906, 106.0302034 , 102.99182384, 105.77398424],
               [107.34695512, 109.58845184, 106.89334239, 107.73437469],
               [103.69995885, 107.03933669, 102.88085561, 105.9641595 ],
               [106.10818548, 110.2314323 , 106.00452296, 108.57993249],
               [109.36045131, 110.23539601, 108.06098288, 109.48534368]]).T,
    TimeUnit.WEEK:
        array([[ 88.93156032,  96.63693658,  88.93156032,  92.37788609],
               [ 93.49809155, 101.50344588,  92.88625596, 100.96102625],
               [100.01205876, 104.17351384,  98.87795772, 100.84962443],
               [ 97.44497166, 104.21480703,  96.66414382, 101.00533186],
               [100.65619032, 106.89589717,  98.64542229, 106.79396627],
               [107.17238037, 109.09697393, 104.32384727, 107.4461503 ]]).T,
    TimeUnit.MONTH:
        array([[ 83.10786228,  95.5730141 ,  82.26583755,  91.85749261],
               [ 91.05280871,  99.67965172,  82.65526127,  95.40221311],
               [ 98.48868549, 115.84142056,  97.22935015, 113.69633124],
               [114.48326186, 119.18324258, 105.46775866, 114.01580809]]).T}

_DEFAULT_SAMPLES[LeadingTrends.STRICTLY_BEARISH] = {
    TimeUnit.DAY:
        array([[109.1897386 , 109.61497381, 106.3691468 , 107.33351181],
               [107.29624351, 109.58005901, 106.29865097, 108.51581462],
               [112.1163598 , 113.0415974 , 107.69014369, 107.87567887],
               [105.93483736, 106.81793588, 104.09309204, 105.88200216],
               [104.73238732, 106.24421653, 103.39885534, 103.81544569],
               [102.3546368 , 102.71009901, 100.0704614 , 100.8011002 ],
               [100.18935278, 100.84587858,  95.39673603,  95.69101941],
               [ 94.99671741,  95.9364899 ,  93.63475497,  94.2493404 ],
               [ 91.65934582,  92.33493238,  90.97496833,  90.97496833],
               [ 90.17766232,  90.30409808,  88.19765543,  88.19765543],
               [ 88.73043119,  89.16060098,  87.79095603,  88.77944758]]).T,
    TimeUnit.WEEK:
        array([[107.54246501, 112.87273589, 106.14572408, 106.27083291],
               [104.96909431, 106.82333059, 101.42204838, 103.20893305],
               [105.04610394, 105.04610394,  96.91309148, 103.26394464],
               [102.91378771, 104.40018116,  97.81744414,  99.59697608],
               [ 98.84040742, 101.43117859,  89.4057102 ,  89.4057102 ],
               [ 88.79086582,  91.24057588,  87.58722847,  89.04552611]]).T,
    TimeUnit.MONTH:
        array([[127.44893939, 127.44893939, 103.25663856, 106.66940995],
               [107.73218541, 109.66335641,  93.21646802,  97.96937156],
               [ 97.10241768,  99.35583864,  85.75791753,  90.06755737],
               [ 88.74056565,  94.11450998,  82.13061572,  89.32526871]]).T}

def _func(cct: Candlestick) -> NumericTimeSeries:
    ret = cct.is_doji_body
    return ret

doji = MacroInfo(symbol=_ENG_NAME,
                 name=_CHT_NAME,
                 description=description,
                 func=_func,
                 interval=1,
                 samples=_DEFAULT_SAMPLES,
                 py_version="22-v1",
                 db_version="22-v1")
